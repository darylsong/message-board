{"version":3,"sources":["components/Home.js","services/token.js","services/sections.js","services/comments.js","services/posts.js","services/users.js","components/CommentList.js","components/PostList.js","components/SectionList.js","components/LoginForm.js","components/AccountForm.js","services/login.js","App.js","index.js"],"names":["Home","token","newToken","baseUrl","getAll","a","axios","get","request","data","getSection","id","response","create","newObject","config","headers","Authorization","tokenService","post","update","put","remove","delete","getComment","getPostComments","filter","comment","getPost","getSectionPosts","section","getUsers","then","getUser","createUser","Post","postCreator","title","user","name","content","slice","text","Comment","CommentList","sectionId","useState","comments","setComments","setPost","setText","postId","useParams","match","useRouteMatch","history","useHistory","useEffect","creatorId","commentService","postService","userService","console","log","addComment","event","preventDefault","returnedComment","concat","push","path","to","onSubmit","value","onChange","target","type","map","key","PostList","posts","setPosts","setTitle","addPost","returnedPost","TextField","label","Button","variant","color","TableContainer","component","Paper","Table","TableBody","TableRow","TableCell","Link","SectionList","sections","setSections","setName","description","setDescription","sectionService","addSection","returnedSection","LoginForm","login","username","setUsername","password","setPassword","handleLogin","AccountForm","email","setEmail","credentials","App","setUser","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","handleLogout","removeItem","AppBar","position","Toolbar","onClick","ReactDOM","render","StrictMode","Container","document","getElementById"],"mappings":"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","file":"static/js/main.f2af371f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","let token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getToken = () => {\r\n    return token\r\n}\r\n\r\nexport default { getToken, setToken }","import axios from 'axios'\r\nimport tokenService from './token'\r\nconst baseUrl = 'http://localhost:3003/sections'\r\n\r\nconst getAll = async () => {\r\n    const request = await axios.get(baseUrl)\r\n    return request.data\r\n}\r\n\r\nconst getSection = async id => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n  \r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return response.data\r\n}\r\n  \r\nconst remove = async id => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, getSection, create, update, remove }","import axios from 'axios'\r\nimport tokenService from './token'\r\nconst baseUrl = 'http://localhost:3003/comments'\r\n\r\nconst getAll = async () => {\r\n    const request = await axios.get(baseUrl)\r\n    return request.data\r\n}\r\n\r\nconst getComment = async id => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nconst getPostComments = async id => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data.filter(comment => {\r\n        return comment.post.id === id\r\n    })\r\n}\r\n  \r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return response.data\r\n}\r\n  \r\nconst remove = async id => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, getComment, getPostComments, create, update, remove }","import axios from 'axios'\r\nimport tokenService from './token'\r\nconst baseUrl = 'http://localhost:3003/posts'\r\n\r\nconst getAll = async () => {\r\n    const request = await axios.get(baseUrl)\r\n    return request.data\r\n}\r\n\r\nconst getPost = async id => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nconst getSectionPosts = async id => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data.filter(post => {\r\n        return post.section.id === id\r\n    })\r\n}\r\n  \r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n    \r\n    const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return response.data\r\n}\r\n  \r\nconst remove = async id => {\r\n    const config = {\r\n        headers: { Authorization: tokenService.getToken() }\r\n    }\r\n\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, getPost, getSectionPosts, create, update, remove }","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/users'\r\n\r\nconst getUsers = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst getUser = async id => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nconst createUser = async newObject => {\r\n    const response = await axios.post(baseUrl, newObject)\r\n    return response.data\r\n}\r\n  \r\nexport default { getUsers, getUser, createUser }","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Switch, Route, Link, useParams, useRouteMatch, Redirect, useHistory\r\n} from \"react-router-dom\"\r\n\r\nimport commentService from '../services/comments'\r\nimport postService from '../services/posts'\r\nimport userService from '../services/users'\r\n\r\nconst Post = ({ post, postCreator }) => {\r\n    return (\r\n        <div>\r\n            Title: {post.title} <br />\r\n            Posted by: {post.user.name} <br />\r\n            Message: {post.content.slice(-1)[0].text} <br /><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comment = ({ comment }) => {\r\n    return (\r\n        <div>\r\n            Posted by: {comment.user.name} <br />\r\n            Comment: {comment.content.slice(-1)[0].text} <br /><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CommentList = ({ sectionId, user }) => {\r\n    const [ comments, setComments ] = useState([])\r\n    const [ post, setPost ] = useState({\r\n        title: '',\r\n        content: [\r\n            {\r\n                text: ''\r\n            }\r\n        ],\r\n        user: {\r\n            name: ''\r\n        }\r\n    })\r\n    const [ postCreator, setPostCreator ] = useState({})\r\n\r\n    const [ text, setText ] = useState('')\r\n\r\n    let { postId } = useParams()\r\n    let match = useRouteMatch(`/sections/${sectionId}/${postId}`)\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        let creatorId = ''\r\n\r\n        commentService\r\n            .getPostComments(postId)\r\n            .then(data => {\r\n                setComments(data)\r\n            })\r\n        \r\n        postService\r\n            .getPost(postId)\r\n            .then(data => {\r\n                creatorId = data.user\r\n                userService\r\n                    .getUser(creatorId)\r\n                    .then(user => {\r\n                        console.log('user', user)\r\n                        data.user = user\r\n                        setPost(data)\r\n                    })\r\n            })\r\n    }, [postId])\r\n\r\n    const addComment = (event) => {\r\n        event.preventDefault()\r\n        \r\n        commentService\r\n            .create({\r\n                text,\r\n                postId\r\n            })\r\n            .then(returnedComment => {\r\n                userService\r\n                .getUser(returnedComment.user)\r\n                .then(user => {\r\n                    returnedComment.user = user\r\n                    setComments(comments.concat(returnedComment))\r\n                })\r\n            })\r\n        \r\n        setText('')\r\n        history.push(`${match.path}`)\r\n    }\r\n\r\n    const commentForm = () => (\r\n        <form onSubmit={addComment}>\r\n            <h2>add comment</h2>\r\n            text:\r\n            <input id='text' value={text} onChange={({ target }) => setText(target.value)}></input>\r\n            <br />\r\n            <button id='submit-button' type=\"submit\">create</button>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={`${match.path}/create`}>\r\n                {user === null ?\r\n                        <Redirect to='/login' />\r\n                    :   commentForm()\r\n                }\r\n            </Route>\r\n            <Route path={match.path}>\r\n                <h1>Post</h1>\r\n                <Post post={post} postCreator={postCreator} />\r\n\r\n                <h1>Comments</h1>\r\n\r\n                {comments.map(comment => \r\n                    <Comment comment={comment} key={comment.id} />\r\n                )}\r\n\r\n                {user === null ? <div /> : (\r\n                    <div>\r\n                        <Link to={`${match.path}/create`}>\r\n                            <button>\r\n                                create new\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default CommentList","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Switch, Route, Link, useParams, useRouteMatch, Redirect, useHistory\r\n} from \"react-router-dom\"\r\nimport {\r\n    Container,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Paper,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport CommentList from '../components/CommentList'\r\nimport postService from '../services/posts'\r\nimport userService from '../services/users'\r\n \r\nconst PostList = ({ user }) => {\r\n    const [ posts, setPosts ] = useState([])\r\n\r\n    const [ title, setTitle ] = useState('')\r\n    const [ text, setText ] = useState('')\r\n\r\n    let { sectionId } = useParams()\r\n    let match = useRouteMatch(`/sections/${sectionId}`)\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        postService\r\n            .getSectionPosts(sectionId)\r\n            .then(data => {\r\n                setPosts(data)\r\n            })\r\n    }, [sectionId])\r\n\r\n    const addPost = (event) => {\r\n        event.preventDefault()\r\n        \r\n        postService\r\n            .create({\r\n                title,\r\n                text,\r\n                sectionId\r\n            })\r\n            .then(returnedPost => {\r\n                userService\r\n                    .getUser(returnedPost.user)\r\n                    .then(user => {\r\n                        console.log(user)\r\n                        returnedPost.user = user\r\n                        setPosts(posts.concat(returnedPost))\r\n                    })\r\n            })\r\n        \r\n        setTitle('')\r\n        setText('')\r\n        history.push(`${match.path}`)\r\n    }\r\n\r\n    const postForm = () => (\r\n        <div>\r\n            <h1>Create post</h1>\r\n            <form onSubmit={addPost}>\r\n                <div>\r\n                    <TextField label='title' value={title} onChange={({ target }) => setTitle(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField label='text' value={text} onChange={({ target }) => setText(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        create\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={`${match.path}/create`}>\r\n                {user === null ?\r\n                        <Redirect to='/login' />\r\n                    :   postForm()\r\n                }\r\n            </Route>\r\n            <Route path={`${match.path}/:postId`}>\r\n                <CommentList user={user} sectionId={sectionId} />\r\n            </Route>\r\n            <Route path={match.path}>\r\n            <h1>Posts</h1>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell><strong>Title</strong></TableCell>\r\n                            <TableCell><strong>Message</strong></TableCell>\r\n                            <TableCell><strong>Posted by</strong></TableCell>\r\n                        </TableRow>\r\n                        {posts.map(post => (\r\n                            <TableRow key={post.id}>\r\n                                <TableCell>\r\n                                    <Link to={`${match.path}/${post.id}`} >\r\n                                        {post.title}\r\n                                    </Link>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {post.content.slice(-1)[0].text}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {post.user.name}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                {user === null ? <div /> : (\r\n                    <Button variant=\"outlined\" color=\"inherit\" component={Link} to={`${match.path}/create`}>\r\n                        create new\r\n                    </Button>\r\n                )}\r\n            </Route>\r\n        </Switch>\r\n    )\r\n\r\n}\r\n\r\nexport default PostList","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Switch, Route, Link, useRouteMatch, Redirect, useHistory\r\n} from \"react-router-dom\"\r\nimport {\r\n    Container,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Paper,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport sectionService from '../services/sections'\r\n\r\nimport PostList from './PostList'\r\n\r\nconst SectionList = ({ user }) => {\r\n    const [ sections, setSections ] = useState([])\r\n\r\n    const [ name, setName ] = useState('')\r\n    const [ description, setDescription ] = useState('')\r\n\r\n    let match = useRouteMatch('/sections')\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        sectionService.getAll().then(sections => {\r\n            setSections(sections)\r\n        })\r\n    }, [])\r\n\r\n    const addSection = (event) => {\r\n        event.preventDefault()\r\n        \r\n        sectionService\r\n            .create({\r\n                name,\r\n                description\r\n            })\r\n            .then(returnedSection => {\r\n                setSections(sections.concat(returnedSection))\r\n            })\r\n        \r\n        setName('')\r\n        setDescription('')\r\n        history.push('/sections')\r\n    }\r\n\r\n    const sectionForm = () => (\r\n        <div>\r\n            <h1>Create section</h1>\r\n            <form onSubmit={addSection}>\r\n                <div>\r\n                    <TextField label='name' value={name} onChange={({ target }) => setName(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField label='description' value={description} onChange={({ target }) => setDescription(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        create\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={`${match.path}/create`}>\r\n                {user === null ?\r\n                        <Redirect to='/login' />\r\n                    :   sectionForm() }\r\n            </Route>\r\n            <Route path={`${match.path}/:sectionId`}>\r\n                <PostList user={user} />\r\n            </Route>\r\n            <Route path={match.path}>\r\n                <h1>Sections</h1>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><strong>Section</strong></TableCell>\r\n                                <TableCell><strong>Description</strong></TableCell>\r\n                            </TableRow>\r\n                            {sections.map(section => (\r\n                                <TableRow key={section.id}>\r\n                                    <TableCell>\r\n                                        <Link to={`${match.path}/${section.id}`}>\r\n                                            {section.name}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {section.description}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {user === null ? <div /> : (\r\n                    <Button variant=\"outlined\" color=\"inherit\" component={Link} to={`${match.path}/create`}>\r\n                        create new\r\n                    </Button>\r\n                )}\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default SectionList","import React, { useState } from 'react'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nconst LoginForm = ({ login }) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        login({ username, password })\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <div>\r\n                    <TextField label='username' value={username} onChange={({ target }) => setUsername(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField label='password' value={password} type='password' onChange={({ target }) => setPassword(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        login\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport userService from '../services/users'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nconst AccountForm = () => {\r\n    const [ username, setUsername ] = useState('')\r\n    const [ name, setName ] = useState('')\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n\r\n    const createAccount = (event) => {\r\n        event.preventDefault()\r\n        userService.createUser({\r\n            username,\r\n            name,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create Account</h1>\r\n            <form onSubmit={createAccount}>\r\n                <div>\r\n                    <TextField label='username' value={username} onChange={({ target }) => setUsername(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField label='name' value={name} onChange={({ target }) => setName(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField label='email' value={email} onChange={({ target }) => setEmail(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField label='password' value={password} type='password' onChange={({ target }) => setPassword(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        create\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountForm","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link, Redirect\r\n} from \"react-router-dom\"\r\nimport {\r\n  AppBar, Toolbar, Button\r\n} from '@material-ui/core'\r\n\r\nimport Home from './components/Home'\r\nimport SectionList from './components/SectionList'\r\nimport LoginForm from './components/LoginForm'\r\nimport AccountForm from './components/AccountForm'\r\nimport loginService from './services/login'\r\n\r\nimport tokenService from './services/token'\r\n\r\nconst App = () => {\r\n    const [ user, setUser ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n        if (loggedUserJSON) {\r\n          const user = JSON.parse(loggedUserJSON)\r\n          tokenService.setToken(user.token)\r\n          setUser(user)\r\n        }\r\n      }, [])\r\n    \r\n      const handleLogin = async (credentials) => {\r\n        try {\r\n          const user = await loginService.login(credentials)\r\n          window.localStorage.setItem('loggedUser', JSON.stringify(user))\r\n          tokenService.setToken(user.token)\r\n          setUser(user)\r\n        } catch (exception) {\r\n        }\r\n      }\r\n    \r\n      const handleLogout = async (event) => {\r\n        event.preventDefault()\r\n        window.localStorage.removeItem('loggedUser')\r\n        tokenService.setToken(null)\r\n        setUser(null)\r\n      }\r\n\r\n    const padding = {\r\n        padding: 5\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Button color=\"inherit\" component={Link} to=\"/\">\r\n                home\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/sections\">\r\n                sections\r\n              </Button>\r\n              {user === null ? (\r\n                <span>\r\n                  <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                    login\r\n                  </Button>\r\n                  <Button color=\"inherit\" component={Link} to=\"/register\">\r\n                    register\r\n                  </Button>\r\n                </span>\r\n              )\r\n              : ( \r\n                <Button color=\"inherit\" onClick={handleLogout}>\r\n                  logout of {user.name}\r\n                </Button>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <Switch>\r\n            <Route path=\"/register\">\r\n                <AccountForm />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n                {user === null ? \r\n                    <LoginForm  login={handleLogin} />\r\n                :   <Redirect to=\"/\" />\r\n                }\r\n            </Route>\r\n            <Route path=\"/sections\">\r\n              <SectionList user={user} />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n    )\r\n    \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport Container from '@material-ui/core/Container'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}